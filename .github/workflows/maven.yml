# Template: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven
#
# Useful links
# - GitHub Actions: https://docs.github.com/en/actions/learn-github-actions/introduction-to-github-actions
# - Service containers: https://docs.github.com/en/actions/guides/creating-postgresql-service-containers
#
# The CI jobs are set up as follows:
# - One job to build and upload artifacts.
# - One job per DBMS test suite.

name: BenchBase (Java with Maven)

on:
  push:
    branches: [ main ]
  pull_request_target:
    branches: [ main ]

env:
  POM_VERSION: 2021-SNAPSHOT

jobs:
  build-and-upload:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repo.
      uses: actions/checkout@v2
    - name: Setup JDK 11.
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Build with Maven.
      run: mvn -B package --file pom.xml
    - name: Rename artifacts.
      run: |
        mv target/benchbase-$POM_VERSION.zip target/benchbase.zip
        mv target/benchbase-$POM_VERSION.tgz target/benchbase.tgz
    - name: Upload ZIP artifact.
      uses: actions/upload-artifact@v2
      with:
        name: benchbase.zip
        path: target/benchbase.zip
    - name: Upload TGZ artifact.
      uses: actions/upload-artifact@v2
      with:
        name: benchbase.tgz
        path: target/benchbase.tgz

  mysql:
    runs-on: ubuntu-latest
    services:
      mysql: # https://hub.docker.com/_/mysql
        image: mysql:latest
        env:
          MYSQL_ROOT_PASSWORD: rootyMcRooty
          MYSQL_DATABASE: benchbase
          MYSQL_USER: admin
          MYSQL_PASSWORD: password
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 3306:3306
    steps:
      - name: Checkout repo.
        uses: actions/checkout@v2
      - name: Setup JDK 11.
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Build with Maven.
        run: mvn -B package --file pom.xml
      - name: Extract TGZ artifact in target/.
        working-directory: target
        run: |
          tar xvzf benchbase-$POM_VERSION.tgz
          mv benchbase-$POM_VERSION benchbase-extracted
      - name: AuctionMark
        working-directory: target/benchbase-extracted
        env:
          MYSQL_PORT: ${{ job.services.mysql.ports[3306] }}
        run: |
          mysql -h127.0.0.1 -P$MYSQL_PORT -uadmin -ppassword -e "DROP DATABASE IF EXISTS benchbase; CREATE DATABASE benchbase"
          java -jar benchbase.jar -b auctionmark -c config/mysql/sample_auctionmark_config.xml --create=true --load=true --execute=true
      - name: CH-benCHmark
        working-directory: target/benchbase-extracted
        env:
          MYSQL_PORT: ${{ job.services.mysql.ports[3306] }}
        run: |
          mysql -h127.0.0.1 -P$MYSQL_PORT -uadmin -ppassword -e "DROP DATABASE IF EXISTS benchbase; CREATE DATABASE benchbase"
          java -jar benchbase.jar -b tpcc -c config/mysql/sample_tpcc_config.xml --create=true --load=true
          java -jar benchbase.jar -b chbenchmark -c config/mysql/sample_chbenchmark_config.xml --create=true --load=true --execute=true
      - name: Epinions.com
        working-directory: target/benchbase-extracted
        env:
          MYSQL_PORT: ${{ job.services.mysql.ports[3306] }}
        run: |
          mysql -h127.0.0.1 -P$MYSQL_PORT -uadmin -ppassword -e "DROP DATABASE IF EXISTS benchbase; CREATE DATABASE benchbase"
          java -jar benchbase.jar -b epinions -c config/mysql/sample_epinions_config.xml --create=true --load=true --execute=true
      - name: hyadapt
        working-directory: target/benchbase-extracted
        env:
          MYSQL_PORT: ${{ job.services.mysql.ports[3306] }}
        run: |
          mysql -h127.0.0.1 -P$MYSQL_PORT -uadmin -ppassword -e "DROP DATABASE IF EXISTS benchbase; CREATE DATABASE benchbase"
          java -jar benchbase.jar -b hyadapt -c config/mysql/sample_hyadapt_config.xml --create=true --load=true --execute=true
      - name: noop
        working-directory: target/benchbase-extracted
        env:
          MYSQL_PORT: ${{ job.services.mysql.ports[3306] }}
        run: |
          mysql -h127.0.0.1 -P$MYSQL_PORT -uadmin -ppassword -e "DROP DATABASE IF EXISTS benchbase; CREATE DATABASE benchbase"
          java -jar benchbase.jar -b noop -c config/mysql/sample_noop_config.xml --create=true --load=true --execute=true
      - name: Resource Stresser
        working-directory: target/benchbase-extracted
        env:
          MYSQL_PORT: ${{ job.services.mysql.ports[3306] }}
        run: |
          mysql -h127.0.0.1 -P$MYSQL_PORT -uadmin -ppassword -e "DROP DATABASE IF EXISTS benchbase; CREATE DATABASE benchbase"
          java -jar benchbase.jar -b resourcestresser -c config/mysql/sample_resourcestresser_config.xml --create=true --load=true --execute=true
      - name: SEATS
        working-directory: target/benchbase-extracted
        env:
          MYSQL_PORT: ${{ job.services.mysql.ports[3306] }}
        run: |
          mysql -h127.0.0.1 -P$MYSQL_PORT -uadmin -ppassword -e "DROP DATABASE IF EXISTS benchbase; CREATE DATABASE benchbase"
          java -jar benchbase.jar -b seats -c config/mysql/sample_seats_config.xml --create=true --load=true --execute=true
      - name: SIBench
        working-directory: target/benchbase-extracted
        env:
          MYSQL_PORT: ${{ job.services.mysql.ports[3306] }}
        run: |
          mysql -h127.0.0.1 -P$MYSQL_PORT -uadmin -ppassword -e "DROP DATABASE IF EXISTS benchbase; CREATE DATABASE benchbase"
          java -jar benchbase.jar -b sibench -c config/mysql/sample_sibench_config.xml --create=true --load=true --execute=true
      - name: SmallBank
        working-directory: target/benchbase-extracted
        env:
          MYSQL_PORT: ${{ job.services.mysql.ports[3306] }}
        run: |
          mysql -h127.0.0.1 -P$MYSQL_PORT -uadmin -ppassword -e "DROP DATABASE IF EXISTS benchbase; CREATE DATABASE benchbase"
          java -jar benchbase.jar -b smallbank -c config/mysql/sample_smallbank_config.xml --create=true --load=true --execute=true
      - name: TATP
        working-directory: target/benchbase-extracted
        env:
          MYSQL_PORT: ${{ job.services.mysql.ports[3306] }}
        run: |
          mysql -h127.0.0.1 -P$MYSQL_PORT -uadmin -ppassword -e "DROP DATABASE IF EXISTS benchbase; CREATE DATABASE benchbase"
          java -jar benchbase.jar -b tatp -c config/mysql/sample_tatp_config.xml --create=true --load=true --execute=true
      - name: TPC-C
        working-directory: target/benchbase-extracted
        env:
          MYSQL_PORT: ${{ job.services.mysql.ports[3306] }}
        run: |
          mysql -h127.0.0.1 -P$MYSQL_PORT -uadmin -ppassword -e "DROP DATABASE IF EXISTS benchbase; CREATE DATABASE benchbase"
          java -jar benchbase.jar -b tpcc -c config/mysql/sample_tpcc_config.xml --create=true --load=true --execute=true
      # TPC-DS does not have a sample configuration available right now.
      # - name: TPC-DS
      #   working-directory: target/benchbase-extracted
      #   env:
      #     MYSQL_PORT: ${{ job.services.mysql.ports[3306] }}
      #   run: |
      #     mysql -h127.0.0.1 -P$MYSQL_PORT -uadmin -ppassword -e "DROP DATABASE IF EXISTS benchbase; CREATE DATABASE benchbase"
      #     java -jar benchbase.jar -b tpcds -c config/mysql/sample_tpcds_config.xml --create=true --load=true --execute=true
      - name: TPC-H
        working-directory: target/benchbase-extracted
        env:
          MYSQL_PORT: ${{ job.services.mysql.ports[3306] }}
        run: |
          mysql -h127.0.0.1 -P$MYSQL_PORT -uroot -prootyMcRooty -e "SET GLOBAL local_infile=1"
          mysql -h127.0.0.1 -P$MYSQL_PORT -uadmin -ppassword -e "DROP DATABASE IF EXISTS benchbase; CREATE DATABASE benchbase"
          java -jar benchbase.jar -b tpch -c config/mysql/sample_tpch_config.xml --create=true --load=true --execute=true
      - name: Twitter
        working-directory: target/benchbase-extracted
        env:
          MYSQL_PORT: ${{ job.services.mysql.ports[3306] }}
        run: |
          mysql -h127.0.0.1 -P$MYSQL_PORT -uadmin -ppassword -e "DROP DATABASE IF EXISTS benchbase; CREATE DATABASE benchbase"
          java -jar benchbase.jar -b twitter -c config/mysql/sample_twitter_config.xml --create=true --load=true --execute=true
      - name: Voter
        working-directory: target/benchbase-extracted
        env:
          MYSQL_PORT: ${{ job.services.mysql.ports[3306] }}
        run: |
          mysql -h127.0.0.1 -P$MYSQL_PORT -uadmin -ppassword -e "DROP DATABASE IF EXISTS benchbase; CREATE DATABASE benchbase"
          java -jar benchbase.jar -b voter -c config/mysql/sample_voter_config.xml --create=true --load=true --execute=true
      - name: Wikipedia
        working-directory: target/benchbase-extracted
        env:
          MYSQL_PORT: ${{ job.services.mysql.ports[3306] }}
        run: |
          mysql -h127.0.0.1 -P$MYSQL_PORT -uadmin -ppassword -e "DROP DATABASE IF EXISTS benchbase; CREATE DATABASE benchbase"
          java -jar benchbase.jar -b wikipedia -c config/mysql/sample_wikipedia_config.xml --create=true --load=true --execute=true
      - name: YCSB
        working-directory: target/benchbase-extracted
        env:
          MYSQL_PORT: ${{ job.services.mysql.ports[3306] }}
        run: |
          mysql -h127.0.0.1 -P$MYSQL_PORT -uadmin -ppassword -e "DROP DATABASE IF EXISTS benchbase; CREATE DATABASE benchbase"
          java -jar benchbase.jar -b ycsb -c config/mysql/sample_ycsb_config.xml --create=true --load=true --execute=true
      - name: Aggregate result summaries.
        if: ${{ github.event_name == 'pull_request_target' }}
        working-directory: target/benchbase-extracted
        run: |
          SUMMARIES=$(python3 scripts/result_aggregator.py results/)
          echo 'COMMENT_MESSAGE<<EOF' >> $GITHUB_ENV
          echo -n "Commit Hash: ${{ github.event.pull_request.head.sha }}" >> $GITHUB_ENV
          echo -n '<br>' >> $GITHUB_ENV
          echo $SUMMARIES >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
      - name: Post aggregated result summaries as a comment.
        if: ${{ github.event_name == 'pull_request_target' }}
        uses: actions/github-script@v4
        with:
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '${{ env.COMMENT_MESSAGE }}'
            })

  postgresql:
    runs-on: ubuntu-latest
    services:
      postgres: # https://hub.docker.com/_/postgres
        image: postgres:latest
        env:
          POSTGRES_DB: benchbase
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Checkout repo.
        uses: actions/checkout@v2
      - name: Setup JDK 11.
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Build with Maven.
        run: mvn -B package --file pom.xml
      - name: Extract TGZ artifact in target/.
        working-directory: target
        run: |
          tar xvzf benchbase-$POM_VERSION.tgz
          mv benchbase-$POM_VERSION benchbase-extracted
      - name: AuctionMark
        working-directory: target/benchbase-extracted
        run: |
          PGPASSWORD=password dropdb -h localhost -U admin benchbase --if-exists
          PGPASSWORD=password createdb -h localhost -U admin benchbase
          java -jar benchbase.jar -b auctionmark -c config/postgres/sample_auctionmark_config.xml --create=true --load=true --execute=true
      - name: CH-benCHmark
        working-directory: target/benchbase-extracted
        run: |
          PGPASSWORD=password dropdb -h localhost -U admin benchbase --if-exists
          PGPASSWORD=password createdb -h localhost -U admin benchbase
          java -jar benchbase.jar -b tpcc -c config/postgres/sample_tpcc_config.xml --create=true --load=true
          java -jar benchbase.jar -b chbenchmark -c config/postgres/sample_chbenchmark_config.xml --create=true --load=true --execute=true
      - name: Epinions.com
        working-directory: target/benchbase-extracted
        run: |
          PGPASSWORD=password dropdb -h localhost -U admin benchbase --if-exists
          PGPASSWORD=password createdb -h localhost -U admin benchbase
          java -jar benchbase.jar -b epinions -c config/postgres/sample_epinions_config.xml --create=true --load=true --execute=true
      - name: hyadapt
        working-directory: target/benchbase-extracted
        run: |
          PGPASSWORD=password dropdb -h localhost -U admin benchbase --if-exists
          PGPASSWORD=password createdb -h localhost -U admin benchbase
          java -jar benchbase.jar -b hyadapt -c config/postgres/sample_hyadapt_config.xml --create=true --load=true --execute=true
      - name: noop
        working-directory: target/benchbase-extracted
        run: |
          PGPASSWORD=password dropdb -h localhost -U admin benchbase --if-exists
          PGPASSWORD=password createdb -h localhost -U admin benchbase
          java -jar benchbase.jar -b noop -c config/postgres/sample_noop_config.xml --create=true --load=true --execute=true
      - name: Resource Stresser
        working-directory: target/benchbase-extracted
        run: |
          PGPASSWORD=password dropdb -h localhost -U admin benchbase --if-exists
          PGPASSWORD=password createdb -h localhost -U admin benchbase
          java -jar benchbase.jar -b resourcestresser -c config/postgres/sample_resourcestresser_config.xml --create=true --load=true --execute=true
      - name: SEATS
        working-directory: target/benchbase-extracted
        run: |
          PGPASSWORD=password dropdb -h localhost -U admin benchbase --if-exists
          PGPASSWORD=password createdb -h localhost -U admin benchbase
          java -jar benchbase.jar -b seats -c config/postgres/sample_seats_config.xml --create=true --load=true --execute=true
      - name: SIBench
        working-directory: target/benchbase-extracted
        run: |
          PGPASSWORD=password dropdb -h localhost -U admin benchbase --if-exists
          PGPASSWORD=password createdb -h localhost -U admin benchbase
          java -jar benchbase.jar -b sibench -c config/postgres/sample_sibench_config.xml --create=true --load=true --execute=true
      - name: SmallBank
        working-directory: target/benchbase-extracted
        run: |
          PGPASSWORD=password dropdb -h localhost -U admin benchbase --if-exists
          PGPASSWORD=password createdb -h localhost -U admin benchbase
          java -jar benchbase.jar -b smallbank -c config/postgres/sample_smallbank_config.xml --create=true --load=true --execute=true
      - name: TATP
        working-directory: target/benchbase-extracted
        run: |
          PGPASSWORD=password dropdb -h localhost -U admin benchbase --if-exists
          PGPASSWORD=password createdb -h localhost -U admin benchbase
          java -jar benchbase.jar -b tatp -c config/postgres/sample_tatp_config.xml --create=true --load=true --execute=true
      - name: TPC-C
        working-directory: target/benchbase-extracted
        run: |
          PGPASSWORD=password dropdb -h localhost -U admin benchbase --if-exists
          PGPASSWORD=password createdb -h localhost -U admin benchbase
          java -jar benchbase.jar -b tpcc -c config/postgres/sample_tpcc_config.xml --create=true --load=true --execute=true
      # TPC-DS does not have a sample configuration available right now.
      # - name: TPC-DS
      #   working-directory: target/benchbase-extracted
      #   run: |
      #     PGPASSWORD=password dropdb -h localhost -U admin benchbase --if-exists
      #     PGPASSWORD=password createdb -h localhost -U admin benchbase
      #     java -jar benchbase.jar -b tpcds -c config/postgres/sample_tpcds_config.xml --create=true --load=true --execute=true
      - name: TPC-H
        working-directory: target/benchbase-extracted
        run: |
          PGPASSWORD=password dropdb -h localhost -U admin benchbase --if-exists
          PGPASSWORD=password createdb -h localhost -U admin benchbase
          java -jar benchbase.jar -b tpch -c config/postgres/sample_tpch_config.xml --create=true --load=true --execute=true
      - name: Twitter
        working-directory: target/benchbase-extracted
        run: |
          PGPASSWORD=password dropdb -h localhost -U admin benchbase --if-exists
          PGPASSWORD=password createdb -h localhost -U admin benchbase
          java -jar benchbase.jar -b twitter -c config/postgres/sample_twitter_config.xml --create=true --load=true --execute=true
      - name: Voter
        working-directory: target/benchbase-extracted
        run: |
          PGPASSWORD=password dropdb -h localhost -U admin benchbase --if-exists
          PGPASSWORD=password createdb -h localhost -U admin benchbase
          java -jar benchbase.jar -b voter -c config/postgres/sample_voter_config.xml --create=true --load=true --execute=true
      - name: Wikipedia
        working-directory: target/benchbase-extracted
        run: |
          PGPASSWORD=password dropdb -h localhost -U admin benchbase --if-exists
          PGPASSWORD=password createdb -h localhost -U admin benchbase
          java -jar benchbase.jar -b wikipedia -c config/postgres/sample_wikipedia_config.xml --create=true --load=true --execute=true
      - name: YCSB
        working-directory: target/benchbase-extracted
        run: |
          PGPASSWORD=password dropdb -h localhost -U admin benchbase --if-exists
          PGPASSWORD=password createdb -h localhost -U admin benchbase
          java -jar benchbase.jar -b ycsb -c config/postgres/sample_ycsb_config.xml --create=true --load=true --execute=true
      - name: Aggregate result summaries.
        if: ${{ github.event_name == 'pull_request_target' }}
        working-directory: target/benchbase-extracted
        run: |
          SUMMARIES=$(python3 scripts/result_aggregator.py results/)
          echo 'COMMENT_MESSAGE<<EOF' >> $GITHUB_ENV
          echo -n "Commit Hash: ${{ github.event.pull_request.head.sha }}" >> $GITHUB_ENV
          echo -n '<br>' >> $GITHUB_ENV
          echo $SUMMARIES >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
      - name: Post aggregated result summaries as a comment.
        if: ${{ github.event_name == 'pull_request_target' }}
        uses: actions/github-script@v4
        with:
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '${{ env.COMMENT_MESSAGE }}'
            })

  sqlite:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo.
        uses: actions/checkout@v2
      - name: Setup JDK 11.
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Build with Maven.
        run: mvn -B package --file pom.xml
      - name: Extract TGZ artifact in target/.
        working-directory: target
        run: |
          tar xvzf benchbase-$POM_VERSION.tgz
          mv benchbase-$POM_VERSION benchbase-extracted
      - name: AuctionMark
        working-directory: target/benchbase-extracted
        run: |
          java -jar benchbase.jar -b auctionmark -c config/sqlite/sample_auctionmark_config.xml --create=true --load=true --execute=true
      - name: CH-benCHmark
        working-directory: target/benchbase-extracted
        run: |
          java -jar benchbase.jar -b tpcc -c config/sqlite/sample_tpcc_config.xml --create=true --load=true
          java -jar benchbase.jar -b chbenchmark -c config/sqlite/sample_chbenchmark_config.xml --create=true --load=true --execute=true
      - name: Epinions.com
        working-directory: target/benchbase-extracted
        run: |
          java -jar benchbase.jar -b epinions -c config/sqlite/sample_epinions_config.xml --create=true --load=true --execute=true
      - name: hyadapt
        working-directory: target/benchbase-extracted
        run: |
          java -jar benchbase.jar -b hyadapt -c config/sqlite/sample_hyadapt_config.xml --create=true --load=true --execute=true
      - name: noop
        working-directory: target/benchbase-extracted
        run: |
          java -jar benchbase.jar -b noop -c config/sqlite/sample_noop_config.xml --create=true --load=true --execute=true
      - name: Resource Stresser
        working-directory: target/benchbase-extracted
        run: |
          java -jar benchbase.jar -b resourcestresser -c config/sqlite/sample_resourcestresser_config.xml --create=true --load=true --execute=true
      - name: SEATS
        working-directory: target/benchbase-extracted
        run: |
          java -jar benchbase.jar -b seats -c config/sqlite/sample_seats_config.xml --create=true --load=true --execute=true
      - name: SIBench
        working-directory: target/benchbase-extracted
        run: |
          java -jar benchbase.jar -b sibench -c config/sqlite/sample_sibench_config.xml --create=true --load=true --execute=true
      - name: SmallBank
        working-directory: target/benchbase-extracted
        run: |
          java -jar benchbase.jar -b smallbank -c config/sqlite/sample_smallbank_config.xml --create=true --load=true --execute=true
      - name: TATP
        working-directory: target/benchbase-extracted
        run: |
          java -jar benchbase.jar -b tatp -c config/sqlite/sample_tatp_config.xml --create=true --load=true --execute=true
      - name: TPC-C
        working-directory: target/benchbase-extracted
        run: |
          java -jar benchbase.jar -b tpcc -c config/sqlite/sample_tpcc_config.xml --create=true --load=true --execute=true
      # TPC-DS does not have a sample configuration available right now.
      # - name: TPC-DS
      #   working-directory: target/benchbase-extracted
      #   run: |
      #     PGPASSWORD=password dropdb -h localhost -U admin benchbase --if-exists
      #     PGPASSWORD=password createdb -h localhost -U admin benchbase
      #     java -jar benchbase.jar -b tpcds -c config/sqlite/sample_tpcds_config.xml --create=true --load=true --execute=true
      - name: TPC-H
        working-directory: target/benchbase-extracted
        run: |
          java -jar benchbase.jar -b tpch -c config/sqlite/sample_tpch_config.xml --create=true --load=true --execute=true
      - name: Twitter
        working-directory: target/benchbase-extracted
        run: |
          java -jar benchbase.jar -b twitter -c config/sqlite/sample_twitter_config.xml --create=true --load=true --execute=true
      - name: Voter
        working-directory: target/benchbase-extracted
        run: |
          java -jar benchbase.jar -b voter -c config/sqlite/sample_voter_config.xml --create=true --load=true --execute=true
      - name: Wikipedia
        working-directory: target/benchbase-extracted
        run: |
          java -jar benchbase.jar -b wikipedia -c config/sqlite/sample_wikipedia_config.xml --create=true --load=true --execute=true
      - name: YCSB
        working-directory: target/benchbase-extracted
        run: |
          java -jar benchbase.jar -b ycsb -c config/sqlite/sample_ycsb_config.xml --create=true --load=true --execute=true
      - name: Aggregate result summaries.
        if: ${{ github.event_name == 'pull_request_target' }}
        working-directory: target/benchbase-extracted
        run: |
          SUMMARIES=$(python3 scripts/result_aggregator.py results/)
          echo 'COMMENT_MESSAGE<<EOF' >> $GITHUB_ENV
          echo -n "Commit Hash: ${{ github.event.pull_request.head.sha }}" >> $GITHUB_ENV
          echo -n '<br>' >> $GITHUB_ENV
          echo $SUMMARIES >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
      - name: Post aggregated result summaries as a comment.
        if: ${{ github.event_name == 'pull_request_target' }}
        uses: actions/github-script@v4
        with:
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '${{ env.COMMENT_MESSAGE }}'
            })
            
  cockroachdb:
    runs-on: ubuntu-latest
    services:
      cockroach: # https://hub.docker.com/repository/docker/timveil/cockroachdb-single-node
        image: timveil/cockroachdb-single-node:latest
        env:
          DATABASE_NAME: benchbase
        ports:
          - 26257:26257
    steps:
      - name: Checkout repo.
        uses: actions/checkout@v2
      - name: Setup JDK 11.
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Build with Maven.
        run: mvn -B package --file pom.xml
      - name: Extract TGZ artifact
        working-directory: target
        run: |
          tar xvzf benchbase-$POM_VERSION.tgz
          mv benchbase-$POM_VERSION benchbase-extracted
      - name: AuctionMark
        working-directory: target/benchbase-extracted
        run: |
          java -jar benchbase.jar -b auctionmark -c config/cockroachdb/sample_auctionmark_config.xml --create=true --load=true --execute=true
      - name: CH-benCHmark
        working-directory: target/benchbase-extracted
        run: |
          java -jar benchbase.jar -b tpcc -c config/cockroachdb/sample_tpcc_config.xml --create=true --load=true
          java -jar benchbase.jar -b chbenchmark -c config/cockroachdb/sample_chbenchmark_config.xml --create=true --load=true --execute=true
      - name: Epinions.com
        working-directory: target/benchbase-extracted
        run: |
          java -jar benchbase.jar -b epinions -c config/cockroachdb/sample_epinions_config.xml --create=true --load=true --execute=true
      - name: hyadapt
        working-directory: target/benchbase-extracted
        run: |
          java -jar benchbase.jar -b hyadapt -c config/cockroachdb/sample_hyadapt_config.xml --create=true --load=true --execute=true
      - name: noop
        working-directory: target/benchbase-extracted
        run: |
          java -jar benchbase.jar -b noop -c config/cockroachdb/sample_noop_config.xml --create=true --load=true --execute=true
      - name: Resource Stresser
        working-directory: target/benchbase-extracted
        run: |
          java -jar benchbase.jar -b resourcestresser -c config/cockroachdb/sample_resourcestresser_config.xml --create=true --load=true --execute=true
      - name: SEATS
        working-directory: target/benchbase-extracted
        run: |
          java -jar benchbase.jar -b seats -c config/cockroachdb/sample_seats_config.xml --create=true --load=true --execute=true
      - name: SIBench
        working-directory: target/benchbase-extracted
        run: |
          java -jar benchbase.jar -b sibench -c config/cockroachdb/sample_sibench_config.xml --create=true --load=true --execute=true
      - name: SmallBank
        working-directory: target/benchbase-extracted
        run: |
          java -jar benchbase.jar -b smallbank -c config/cockroachdb/sample_smallbank_config.xml --create=true --load=true --execute=true
      - name: TATP
        working-directory: target/benchbase-extracted
        run: |
          java -jar benchbase.jar -b tatp -c config/cockroachdb/sample_tatp_config.xml --create=true --load=true --execute=true
      - name: TPC-C
        working-directory: target/benchbase-extracted
        run: |
          java -jar benchbase.jar -b tpcc -c config/cockroachdb/sample_tpcc_config.xml --create=true --load=true --execute=true
      # TPC-DS does not have a sample configuration available right now.
      # - name: TPC-DS
      #   working-directory: target/benchbase-extracted
      #   run: |
      #     java -jar benchbase.jar -b tpcds -c config/cockroachdb/sample_tpcds_config.xml --create=true --load=true --execute=true
      - name: TPC-H
        working-directory: target/benchbase-extracted
        run: |
          java -jar benchbase.jar -b tpch -c config/cockroachdb/sample_tpch_config.xml --create=true --load=true --execute=true
      - name: Twitter
        working-directory: target/benchbase-extracted
        run: |
          java -jar benchbase.jar -b twitter -c config/cockroachdb/sample_twitter_config.xml --create=true --load=true --execute=true
      - name: Voter
        working-directory: target/benchbase-extracted
        run: |
          java -jar benchbase.jar -b voter -c config/cockroachdb/sample_voter_config.xml --create=true --load=true --execute=true
      - name: Wikipedia
        working-directory: target/benchbase-extracted
        run: |
          java -jar benchbase.jar -b wikipedia -c config/cockroachdb/sample_wikipedia_config.xml --create=true --load=true --execute=true
      - name: YCSB
        working-directory: target/benchbase-extracted
        run: |
          java -jar benchbase.jar -b ycsb -c config/cockroachdb/sample_ycsb_config.xml --create=true --load=true --execute=true
      - name: Aggregate result summaries.
        if: ${{ github.event_name == 'pull_request_target' }}
        working-directory: target/benchbase-extracted
        run: |
          SUMMARIES=$(python3 scripts/result_aggregator.py results/)
          echo 'COMMENT_MESSAGE<<EOF' >> $GITHUB_ENV
          echo -n "Commit Hash: ${{ github.event.pull_request.head.sha }}" >> $GITHUB_ENV
          echo -n '<br>' >> $GITHUB_ENV
          echo $SUMMARIES >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
      - name: Post aggregated result summaries as a comment.
        if: ${{ github.event_name == 'pull_request_target' }}
        uses: actions/github-script@v4
        with:
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '${{ env.COMMENT_MESSAGE }}'
            })
